set showtabline=0
let g:syntastic_quiet_warnings=1
set nolist

" Enable syntag highligthing within a region of a file
" http://vim.wikia.com/wiki/Different_syntax_highlighting_within_regions_of_a_file
function! EnableInlineSyntaxHighlight(filetype, start, end, textSnipHl) abort
    " echo "executing text enable code snip"
    let ft=toupper(a:filetype)
    let group='textGroup'.ft
    if exists('b:current_syntax')
        let s:current_syntax=b:current_syntax
        " Remove current syntax definition, as some syntax files (e.g.  cpp.vim)
        " do nothing if b:current_syntax is defined.
        unlet b:current_syntax
        " echo 'unletting'
    endif
    execute 'syntax include @'.group.' syntax/'.a:filetype.'.vim'
    try
        execute 'syntax include @'.group.' after/syntax/'.a:filetype.'.vim'
    catch
    endtry
    if exists('s:current_syntax')
        let b:current_syntax=s:current_syntax
        " echo 'let current syntax'
    else
        unlet b:current_syntax
    endif
    execute 'syntax region textSnip'.ft.'
                \ matchgroup='.a:textSnipHl.' 
                \ start="'.a:start.'" end="'.a:end.'" 
                \ contains=@'.group 
endfunction

function! Highlight()
    call EnableInlineSyntaxHighlight('html',    '```html',    '```', 'Comment')
    call EnableInlineSyntaxHighlight('javascript',    '```javascript',    '```', 'Comment')
endfunction

nmap <leader>z :call Highlight()<cr>

call EnableInlineSyntaxHighlight('html',    '```html',    '```', 'Comment')
call EnableInlineSyntaxHighlight('javascript',    '```javascript',    '```', 'Comment')
